FROM ubuntu:18.04 AS builder

LABEL maintainer="Yoshifumi Sumida <yoshifumi.sumida@gmail.com>"
LABEL org.opencontainers.image.source https://github.com/gracefullife/free5gc-k8s

ARG GIT_TAG=latest
LABEL name="free5gc" \
      version="${GIT_TAG}.ubuntu18" \
      io.k8s.description="Image containing all build dependencies for free5gc."

RUN apt-get update && \
    apt-get install -qqqqy \
        autoconf=2.69-11 \
        cmake=3.10.2-1ubuntu2.18.04.1 \
        gcc=4:7.4.0-1ubuntu2.3 \
        git \
        libmnl-dev=1.0.4-2 \
        libtool=2.4.6-2 \
        libyaml-dev=0.1.7-2ubuntu3 \
        make=4.1-9.1ubuntu1 \
        pkg-config=0.29.1-0ubuntu2 \
        upx-ucl=3.94-4 \
        wget=1.19.4-1ubuntu2.2 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Installing Golang
ARG GO_VERSION=1.14.4

WORKDIR /go
RUN wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \
    tar -C /usr/local -zxvf go${GO_VERSION}.linux-amd64.tar.gz && \
    mkdir -p {bin,pkg,src}

ENV GOPATH=/go
ENV GOROOT=/usr/local/go
ENV PATH=${PATH}:${GOPATH}/bin:${GOROOT}/bin
ENV GO111MODULE=off

# Clean Up Binaries already exist and Installing Free5gc
ARG FREE5GC_VERSION=v3.0.4
ARG FREE5GC_COMMITID=371216e0c273ca3b82a3ade05287e56aa0c3d12e
ARG FREE5GC_GIT=https://github.com/free5gc/free5gc

WORKDIR /go/src
COPY patches patches/
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ENV GO111MODULE=on
RUN \
    echo '[*] Build the Network Functions for Contorl Plane' \
    && git clone --recursive -b ${FREE5GC_VERSION} -j 4 --depth 1 ${FREE5GC_GIT} \
    && cd ./free5gc \
    && git checkout ${FREE5GC_COMMITID} \
    && cd ./src \
    && go mod download \
    && for d in * ; do if [ -f "$d/$d.go" ] ; then CGO_ENABLED=0 go build -a -installsuffix nocgo -o ../bin/"$d" -x "$d/$d.go" ; fi ; done \
    && echo '[*] Build the Network Function for User Plane' \
    && go get -u -v "github.com/sirupsen/logrus" \
    && cd ${GOPATH}/src/free5gc/src/upf \
    && mkdir -p build \
    && cd ./build \
    && cmake .. \
    && make -j `nproc` \
    && echo '[*] Build the Web Console for Free5GC Operation' \
    && cd ${GOPATH}/src/free5gc/webconsole \
    && CGO_ENABLED=0 go build -a -installsuffix nocgo -o webui -x server.go


# Alpine is used for debug purpose. You can use scratch for a smaller footprint.
FROM busybox

ENV APP_ROOT=/free5gc
ENV FREE5GC_BUILD_ROOT=/go/src/free5gc
ENV PATH=${APP_ROOT}:${APP_ROOT}/bin:${PATH} HOME=${APP_ROOT}


# Copy executables
COPY --from=builder ${FREE5GC_BUILD_ROOT}/bin/*               ${APP_ROOT}/
COPY --from=builder ${FREE5GC_BUILD_ROOT}/src/upf/build/bin/* ${APP_ROOT}/
COPY --from=builder ${FREE5GC_BUILD_ROOT}/webconsole/webui    ${APP_ROOT}/

# Copy static files (webui frontend)
COPY --from=builder ${FREE5GC_BUILD_ROOT}/webconsole/public ${APP_ROOT}/public

# Copy linked libs
COPY --from=builder ${FREE5GC_BUILD_ROOT}/src/upf/build/updk/src/third_party/libgtp5gnl/lib/libgtp5gnl.so.0 ${APP_ROOT}/
COPY --from=builder ${FREE5GC_BUILD_ROOT}/src/upf/build/utlt_logger/liblogger.so ${APP_ROOT}/

# Copy configuration files (not used for now)
COPY --from=builder ${FREE5GC_BUILD_ROOT}/config/* ${APP_ROOT}/config/
COPY --from=builder ${FREE5GC_BUILD_ROOT}/src/upf/build/config/* ${APP_ROOT}/config/

# Copy default certificates (not used for now)
COPY --from=builder ${FREE5GC_BUILD_ROOT}/support/TLS/* ${APP_ROOT}/support/TLS/
